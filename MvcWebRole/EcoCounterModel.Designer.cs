//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace jp.ne.ghopper.ecocounters
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class EcoCounterEntities : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'EcoCounterEntities' セクションにある接続文字列を使用して新しい EcoCounterEntities オブジェクトを初期化します。
        /// </summary>
        public EcoCounterEntities() : base("name=EcoCounterEntities", "EcoCounterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい EcoCounterEntities オブジェクトを初期化します。
        /// </summary>
        public EcoCounterEntities(string connectionString) : base(connectionString, "EcoCounterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい EcoCounterEntities オブジェクトを初期化します。
        /// </summary>
        public EcoCounterEntities(EntityConnection connection) : base(connection, "EcoCounterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<APPLY_RANGE> APPLY_RANGE
        {
            get
            {
                if ((_APPLY_RANGE == null))
                {
                    _APPLY_RANGE = base.CreateObjectSet<APPLY_RANGE>("APPLY_RANGE");
                }
                return _APPLY_RANGE;
            }
        }
        private ObjectSet<APPLY_RANGE> _APPLY_RANGE;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<COMPANY> COMPANIES
        {
            get
            {
                if ((_COMPANIES == null))
                {
                    _COMPANIES = base.CreateObjectSet<COMPANY>("COMPANIES");
                }
                return _COMPANIES;
            }
        }
        private ObjectSet<COMPANY> _COMPANIES;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<ECO_ACTION_PERFORMANCES> ECO_ACTION_PERFORMANCES
        {
            get
            {
                if ((_ECO_ACTION_PERFORMANCES == null))
                {
                    _ECO_ACTION_PERFORMANCES = base.CreateObjectSet<ECO_ACTION_PERFORMANCES>("ECO_ACTION_PERFORMANCES");
                }
                return _ECO_ACTION_PERFORMANCES;
            }
        }
        private ObjectSet<ECO_ACTION_PERFORMANCES> _ECO_ACTION_PERFORMANCES;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<ECO_ACTIONS> ECO_ACTIONS
        {
            get
            {
                if ((_ECO_ACTIONS == null))
                {
                    _ECO_ACTIONS = base.CreateObjectSet<ECO_ACTIONS>("ECO_ACTIONS");
                }
                return _ECO_ACTIONS;
            }
        }
        private ObjectSet<ECO_ACTIONS> _ECO_ACTIONS;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<GROUP> GROUPS
        {
            get
            {
                if ((_GROUPS == null))
                {
                    _GROUPS = base.CreateObjectSet<GROUP>("GROUPS");
                }
                return _GROUPS;
            }
        }
        private ObjectSet<GROUP> _GROUPS;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<ICON> ICONS
        {
            get
            {
                if ((_ICONS == null))
                {
                    _ICONS = base.CreateObjectSet<ICON>("ICONS");
                }
                return _ICONS;
            }
        }
        private ObjectSet<ICON> _ICONS;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<RANGE> RANGES
        {
            get
            {
                if ((_RANGES == null))
                {
                    _RANGES = base.CreateObjectSet<RANGE>("RANGES");
                }
                return _RANGES;
            }
        }
        private ObjectSet<RANGE> _RANGES;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<ROLE> ROLES
        {
            get
            {
                if ((_ROLES == null))
                {
                    _ROLES = base.CreateObjectSet<ROLE>("ROLES");
                }
                return _ROLES;
            }
        }
        private ObjectSet<ROLE> _ROLES;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<USER> USERS
        {
            get
            {
                if ((_USERS == null))
                {
                    _USERS = base.CreateObjectSet<USER>("USERS");
                }
                return _USERS;
            }
        }
        private ObjectSet<USER> _USERS;

        #endregion
        #region AddTo メソッド
    
        /// <summary>
        /// APPLY_RANGE EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToAPPLY_RANGE(APPLY_RANGE aPPLY_RANGE)
        {
            base.AddObject("APPLY_RANGE", aPPLY_RANGE);
        }
    
        /// <summary>
        /// COMPANIES EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToCOMPANIES(COMPANY cOMPANY)
        {
            base.AddObject("COMPANIES", cOMPANY);
        }
    
        /// <summary>
        /// ECO_ACTION_PERFORMANCES EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToECO_ACTION_PERFORMANCES(ECO_ACTION_PERFORMANCES eCO_ACTION_PERFORMANCES)
        {
            base.AddObject("ECO_ACTION_PERFORMANCES", eCO_ACTION_PERFORMANCES);
        }
    
        /// <summary>
        /// ECO_ACTIONS EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToECO_ACTIONS(ECO_ACTIONS eCO_ACTIONS)
        {
            base.AddObject("ECO_ACTIONS", eCO_ACTIONS);
        }
    
        /// <summary>
        /// GROUPS EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToGROUPS(GROUP gROUP)
        {
            base.AddObject("GROUPS", gROUP);
        }
    
        /// <summary>
        /// ICONS EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToICONS(ICON iCON)
        {
            base.AddObject("ICONS", iCON);
        }
    
        /// <summary>
        /// RANGES EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToRANGES(RANGE rANGE)
        {
            base.AddObject("RANGES", rANGE);
        }
    
        /// <summary>
        /// ROLES EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToROLES(ROLE rOLE)
        {
            base.AddObject("ROLES", rOLE);
        }
    
        /// <summary>
        /// USERS EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToUSERS(USER uSER)
        {
            base.AddObject("USERS", uSER);
        }

        #endregion
    }
    

    #endregion
    
    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="APPLY_RANGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APPLY_RANGE : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい APPLY_RANGE オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static APPLY_RANGE CreateAPPLY_RANGE(global::System.Int32 id)
        {
            APPLY_RANGE aPPLY_RANGE = new APPLY_RANGE();
            aPPLY_RANGE.ID = id;
            return aPPLY_RANGE;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RANGE_ID
        {
            get
            {
                return _RANGE_ID;
            }
            set
            {
                OnRANGE_IDChanging(value);
                ReportPropertyChanging("RANGE_ID");
                _RANGE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RANGE_ID");
                OnRANGE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _RANGE_ID;
        partial void OnRANGE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnRANGE_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TARGET
        {
            get
            {
                return _TARGET;
            }
            set
            {
                OnTARGETChanging(value);
                ReportPropertyChanging("TARGET");
                _TARGET = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TARGET");
                OnTARGETChanged();
            }
        }
        private Nullable<global::System.Int32> _TARGET;
        partial void OnTARGETChanging(Nullable<global::System.Int32> value);
        partial void OnTARGETChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="COMPANY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPANY : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい COMPANY オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static COMPANY CreateCOMPANY(global::System.Int32 id)
        {
            COMPANY cOMPANY = new COMPANY();
            cOMPANY.ID = id;
            return cOMPANY;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="ECO_ACTION_PERFORMANCES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ECO_ACTION_PERFORMANCES : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい ECO_ACTION_PERFORMANCES オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static ECO_ACTION_PERFORMANCES CreateECO_ACTION_PERFORMANCES(global::System.Int32 id)
        {
            ECO_ACTION_PERFORMANCES eCO_ACTION_PERFORMANCES = new ECO_ACTION_PERFORMANCES();
            eCO_ACTION_PERFORMANCES.ID = id;
            return eCO_ACTION_PERFORMANCES;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> USER_ID
        {
            get
            {
                return _USER_ID;
            }
            set
            {
                OnUSER_IDChanging(value);
                ReportPropertyChanging("USER_ID");
                _USER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USER_ID");
                OnUSER_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _USER_ID;
        partial void OnUSER_IDChanging(Nullable<global::System.Int32> value);
        partial void OnUSER_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ECO_ACTION_ID
        {
            get
            {
                return _ECO_ACTION_ID;
            }
            set
            {
                OnECO_ACTION_IDChanging(value);
                ReportPropertyChanging("ECO_ACTION_ID");
                _ECO_ACTION_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ECO_ACTION_ID");
                OnECO_ACTION_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ECO_ACTION_ID;
        partial void OnECO_ACTION_IDChanging(Nullable<global::System.Int32> value);
        partial void OnECO_ACTION_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATE
        {
            get
            {
                return _DATE;
            }
            set
            {
                OnDATEChanging(value);
                ReportPropertyChanging("DATE");
                _DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATE");
                OnDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATE;
        partial void OnDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="ECO_ACTIONS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ECO_ACTIONS : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい ECO_ACTIONS オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static ECO_ACTIONS CreateECO_ACTIONS(global::System.Int32 id)
        {
            ECO_ACTIONS eCO_ACTIONS = new ECO_ACTIONS();
            eCO_ACTIONS.ID = id;
            return eCO_ACTIONS;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ECO_ACTION
        {
            get
            {
                return _ECO_ACTION;
            }
            set
            {
                OnECO_ACTIONChanging(value);
                ReportPropertyChanging("ECO_ACTION");
                _ECO_ACTION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ECO_ACTION");
                OnECO_ACTIONChanged();
            }
        }
        private Nullable<global::System.Int32> _ECO_ACTION;
        partial void OnECO_ACTIONChanging(Nullable<global::System.Int32> value);
        partial void OnECO_ACTIONChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CO2
        {
            get
            {
                return _CO2;
            }
            set
            {
                OnCO2Changing(value);
                ReportPropertyChanging("CO2");
                _CO2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CO2");
                OnCO2Changed();
            }
        }
        private Nullable<global::System.Int32> _CO2;
        partial void OnCO2Changing(Nullable<global::System.Int32> value);
        partial void OnCO2Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ICON_ID
        {
            get
            {
                return _ICON_ID;
            }
            set
            {
                OnICON_IDChanging(value);
                ReportPropertyChanging("ICON_ID");
                _ICON_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ICON_ID");
                OnICON_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ICON_ID;
        partial void OnICON_IDChanging(Nullable<global::System.Int32> value);
        partial void OnICON_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> APPLY_DATE
        {
            get
            {
                return _APPLY_DATE;
            }
            set
            {
                OnAPPLY_DATEChanging(value);
                ReportPropertyChanging("APPLY_DATE");
                _APPLY_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("APPLY_DATE");
                OnAPPLY_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _APPLY_DATE;
        partial void OnAPPLY_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnAPPLY_DATEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Int32> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Int32> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="GROUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GROUP : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい GROUP オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="cOMPANY_ID">COMPANY_ID プロパティの初期値。</param>
        public static GROUP CreateGROUP(global::System.Int32 id, global::System.Int32 cOMPANY_ID)
        {
            GROUP gROUP = new GROUP();
            gROUP.ID = id;
            gROUP.COMPANY_ID = cOMPANY_ID;
            return gROUP;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COMPANY_ID
        {
            get
            {
                return _COMPANY_ID;
            }
            set
            {
                OnCOMPANY_IDChanging(value);
                ReportPropertyChanging("COMPANY_ID");
                _COMPANY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COMPANY_ID");
                OnCOMPANY_IDChanged();
            }
        }
        private global::System.Int32 _COMPANY_ID;
        partial void OnCOMPANY_IDChanging(global::System.Int32 value);
        partial void OnCOMPANY_IDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="ICON")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ICON : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい ICON オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static ICON CreateICON(global::System.Int32 id)
        {
            ICON iCON = new ICON();
            iCON.ID = id;
            return iCON;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ICON1
        {
            get
            {
                return StructuralObject.GetValidValue(_ICON1);
            }
            set
            {
                OnICON1Changing(value);
                ReportPropertyChanging("ICON1");
                _ICON1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ICON1");
                OnICON1Changed();
            }
        }
        private global::System.Byte[] _ICON1;
        partial void OnICON1Changing(global::System.Byte[] value);
        partial void OnICON1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="RANGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RANGE : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい RANGE オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static RANGE CreateRANGE(global::System.Int32 id)
        {
            RANGE rANGE = new RANGE();
            rANGE.ID = id;
            return rANGE;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME_JA
        {
            get
            {
                return _NAME_JA;
            }
            set
            {
                OnNAME_JAChanging(value);
                ReportPropertyChanging("NAME_JA");
                _NAME_JA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME_JA");
                OnNAME_JAChanged();
            }
        }
        private global::System.String _NAME_JA;
        partial void OnNAME_JAChanging(global::System.String value);
        partial void OnNAME_JAChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROLE : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい ROLE オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static ROLE CreateROLE(global::System.Int32 id)
        {
            ROLE rOLE = new ROLE();
            rOLE.ID = id;
            return rOLE;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME_JA
        {
            get
            {
                return _NAME_JA;
            }
            set
            {
                OnNAME_JAChanging(value);
                ReportPropertyChanging("NAME_JA");
                _NAME_JA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME_JA");
                OnNAME_JAChanged();
            }
        }
        private global::System.String _NAME_JA;
        partial void OnNAME_JAChanging(global::System.String value);
        partial void OnNAME_JAChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EcoCounterModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい USER オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="gROUP_ID">GROUP_ID プロパティの初期値。</param>
        public static USER CreateUSER(global::System.Int32 id, global::System.Int32 gROUP_ID)
        {
            USER uSER = new USER();
            uSER.ID = id;
            uSER.GROUP_ID = gROUP_ID;
            return uSER;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_ID
        {
            get
            {
                return _GROUP_ID;
            }
            set
            {
                OnGROUP_IDChanging(value);
                ReportPropertyChanging("GROUP_ID");
                _GROUP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GROUP_ID");
                OnGROUP_IDChanged();
            }
        }
        private global::System.Int32 _GROUP_ID;
        partial void OnGROUP_IDChanging(global::System.Int32 value);
        partial void OnGROUP_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USERID
        {
            get
            {
                return _USERID;
            }
            set
            {
                OnUSERIDChanging(value);
                ReportPropertyChanging("USERID");
                _USERID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USERID");
                OnUSERIDChanged();
            }
        }
        private global::System.String _USERID;
        partial void OnUSERIDChanging(global::System.String value);
        partial void OnUSERIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWORD
        {
            get
            {
                return _PASSWORD;
            }
            set
            {
                OnPASSWORDChanging(value);
                ReportPropertyChanging("PASSWORD");
                _PASSWORD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PASSWORD");
                OnPASSWORDChanged();
            }
        }
        private global::System.String _PASSWORD;
        partial void OnPASSWORDChanging(global::System.String value);
        partial void OnPASSWORDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOGIN_KEY
        {
            get
            {
                return _LOGIN_KEY;
            }
            set
            {
                OnLOGIN_KEYChanging(value);
                ReportPropertyChanging("LOGIN_KEY");
                _LOGIN_KEY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOGIN_KEY");
                OnLOGIN_KEYChanged();
            }
        }
        private global::System.String _LOGIN_KEY;
        partial void OnLOGIN_KEYChanging(global::System.String value);
        partial void OnLOGIN_KEYChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ROLE_ID
        {
            get
            {
                return _ROLE_ID;
            }
            set
            {
                OnROLE_IDChanging(value);
                ReportPropertyChanging("ROLE_ID");
                _ROLE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROLE_ID");
                OnROLE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ROLE_ID;
        partial void OnROLE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnROLE_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> APPLY_DATE
        {
            get
            {
                return _APPLY_DATE;
            }
            set
            {
                OnAPPLY_DATEChanging(value);
                ReportPropertyChanging("APPLY_DATE");
                _APPLY_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("APPLY_DATE");
                OnAPPLY_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _APPLY_DATE;
        partial void OnAPPLY_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnAPPLY_DATEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Int32> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Int32> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
    }

    #endregion
    
}
