//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace jp.ne.ghopper.echo.azuredemo
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class ecocounterEntities1 : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'ecocounterEntities1' セクションにある接続文字列を使用して新しい ecocounterEntities1 オブジェクトを初期化します。
        /// </summary>
        public ecocounterEntities1() : base("name=ecocounterEntities1", "ecocounterEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい ecocounterEntities1 オブジェクトを初期化します。
        /// </summary>
        public ecocounterEntities1(string connectionString) : base(connectionString, "ecocounterEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい ecocounterEntities1 オブジェクトを初期化します。
        /// </summary>
        public ecocounterEntities1(EntityConnection connection) : base(connection, "ecocounterEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<COMPANY> COMPANIES
        {
            get
            {
                if ((_COMPANIES == null))
                {
                    _COMPANIES = base.CreateObjectSet<COMPANY>("COMPANIES");
                }
                return _COMPANIES;
            }
        }
        private ObjectSet<COMPANY> _COMPANIES;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<GROUP> GROUPS
        {
            get
            {
                if ((_GROUPS == null))
                {
                    _GROUPS = base.CreateObjectSet<GROUP>("GROUPS");
                }
                return _GROUPS;
            }
        }
        private ObjectSet<GROUP> _GROUPS;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<ROLE> ROLES
        {
            get
            {
                if ((_ROLES == null))
                {
                    _ROLES = base.CreateObjectSet<ROLE>("ROLES");
                }
                return _ROLES;
            }
        }
        private ObjectSet<ROLE> _ROLES;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<USER> USERS
        {
            get
            {
                if ((_USERS == null))
                {
                    _USERS = base.CreateObjectSet<USER>("USERS");
                }
                return _USERS;
            }
        }
        private ObjectSet<USER> _USERS;

        #endregion
        #region AddTo メソッド
    
        /// <summary>
        /// COMPANIES EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToCOMPANIES(COMPANY cOMPANY)
        {
            base.AddObject("COMPANIES", cOMPANY);
        }
    
        /// <summary>
        /// GROUPS EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToGROUPS(GROUP gROUP)
        {
            base.AddObject("GROUPS", gROUP);
        }
    
        /// <summary>
        /// ROLES EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToROLES(ROLE rOLE)
        {
            base.AddObject("ROLES", rOLE);
        }
    
        /// <summary>
        /// USERS EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToUSERS(USER uSER)
        {
            base.AddObject("USERS", uSER);
        }

        #endregion
    }
    

    #endregion
    
    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ecocounterModel", Name="COMPANY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPANY : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい COMPANY オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static COMPANY CreateCOMPANY(global::System.Int32 id)
        {
            COMPANY cOMPANY = new COMPANY();
            cOMPANY.ID = id;
            return cOMPANY;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ecocounterModel", Name="GROUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GROUP : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい GROUP オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="cOMPANY_ID">COMPANY_ID プロパティの初期値。</param>
        public static GROUP CreateGROUP(global::System.Int32 id, global::System.Int32 cOMPANY_ID)
        {
            GROUP gROUP = new GROUP();
            gROUP.ID = id;
            gROUP.COMPANY_ID = cOMPANY_ID;
            return gROUP;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COMPANY_ID
        {
            get
            {
                return _COMPANY_ID;
            }
            set
            {
                OnCOMPANY_IDChanging(value);
                ReportPropertyChanging("COMPANY_ID");
                _COMPANY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COMPANY_ID");
                OnCOMPANY_IDChanged();
            }
        }
        private global::System.Int32 _COMPANY_ID;
        partial void OnCOMPANY_IDChanging(global::System.Int32 value);
        partial void OnCOMPANY_IDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ecocounterModel", Name="ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROLE : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい ROLE オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        public static ROLE CreateROLE(global::System.Int32 id)
        {
            ROLE rOLE = new ROLE();
            rOLE.ID = id;
            return rOLE;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME_JA
        {
            get
            {
                return _NAME_JA;
            }
            set
            {
                OnNAME_JAChanging(value);
                ReportPropertyChanging("NAME_JA");
                _NAME_JA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME_JA");
                OnNAME_JAChanged();
            }
        }
        private global::System.String _NAME_JA;
        partial void OnNAME_JAChanging(global::System.String value);
        partial void OnNAME_JAChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ecocounterModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい USER オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="gROUP_ID">GROUP_ID プロパティの初期値。</param>
        /// <param name="uSERID">USERID プロパティの初期値。</param>
        /// <param name="nAME">NAME プロパティの初期値。</param>
        /// <param name="pASSWORD">PASSWORD プロパティの初期値。</param>
        /// <param name="rOLE_ID">ROLE_ID プロパティの初期値。</param>
        /// <param name="dEL_FLAG">DEL_FLAG プロパティの初期値。</param>
        public static USER CreateUSER(global::System.Int32 id, global::System.Int32 gROUP_ID, global::System.String uSERID, global::System.String nAME, global::System.String pASSWORD, global::System.Int32 rOLE_ID, global::System.Int32 dEL_FLAG)
        {
            USER uSER = new USER();
            uSER.ID = id;
            uSER.GROUP_ID = gROUP_ID;
            uSER.USERID = uSERID;
            uSER.NAME = nAME;
            uSER.PASSWORD = pASSWORD;
            uSER.ROLE_ID = rOLE_ID;
            uSER.DEL_FLAG = dEL_FLAG;
            return uSER;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUP_ID
        {
            get
            {
                return _GROUP_ID;
            }
            set
            {
                OnGROUP_IDChanging(value);
                ReportPropertyChanging("GROUP_ID");
                _GROUP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GROUP_ID");
                OnGROUP_IDChanged();
            }
        }
        private global::System.Int32 _GROUP_ID;
        partial void OnGROUP_IDChanging(global::System.Int32 value);
        partial void OnGROUP_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USERID
        {
            get
            {
                return _USERID;
            }
            set
            {
                OnUSERIDChanging(value);
                ReportPropertyChanging("USERID");
                _USERID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("USERID");
                OnUSERIDChanged();
            }
        }
        private global::System.String _USERID;
        partial void OnUSERIDChanging(global::System.String value);
        partial void OnUSERIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PASSWORD
        {
            get
            {
                return _PASSWORD;
            }
            set
            {
                OnPASSWORDChanging(value);
                ReportPropertyChanging("PASSWORD");
                _PASSWORD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PASSWORD");
                OnPASSWORDChanged();
            }
        }
        private global::System.String _PASSWORD;
        partial void OnPASSWORDChanging(global::System.String value);
        partial void OnPASSWORDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOGIN_KEY
        {
            get
            {
                return _LOGIN_KEY;
            }
            set
            {
                OnLOGIN_KEYChanging(value);
                ReportPropertyChanging("LOGIN_KEY");
                _LOGIN_KEY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOGIN_KEY");
                OnLOGIN_KEYChanged();
            }
        }
        private global::System.String _LOGIN_KEY;
        partial void OnLOGIN_KEYChanging(global::System.String value);
        partial void OnLOGIN_KEYChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROLE_ID
        {
            get
            {
                return _ROLE_ID;
            }
            set
            {
                OnROLE_IDChanging(value);
                ReportPropertyChanging("ROLE_ID");
                _ROLE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROLE_ID");
                OnROLE_IDChanged();
            }
        }
        private global::System.Int32 _ROLE_ID;
        partial void OnROLE_IDChanging(global::System.Int32 value);
        partial void OnROLE_IDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> APPLY_DATE
        {
            get
            {
                return _APPLY_DATE;
            }
            set
            {
                OnAPPLY_DATEChanging(value);
                ReportPropertyChanging("APPLY_DATE");
                _APPLY_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("APPLY_DATE");
                OnAPPLY_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _APPLY_DATE;
        partial void OnAPPLY_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnAPPLY_DATEChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private global::System.Int32 _DEL_FLAG;
        partial void OnDEL_FLAGChanging(global::System.Int32 value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
    }

    #endregion
    
}
